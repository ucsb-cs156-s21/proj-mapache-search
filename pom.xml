<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>edu.ucsb</groupId>
	<artifactId>mapache-search</artifactId>
	<version>0.1.0</version>
	<name>Mapache Search</name>
	<description>Mapache Search (CMPSC 156 class project)</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.11</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20230227</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.10.1</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.springframework.security.oauth.boot/spring-security-oauth2-autoconfigure -->
		<dependency>
			<groupId>org.springframework.security.oauth.boot</groupId>
			<artifactId>spring-security-oauth2-autoconfigure</artifactId>
			<version>2.2.5.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime -->
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.4.0-b180830.0438</version>
		</dependency>

		<!-- jpa, crud repository -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- add mongodb repositories -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
			<version>2.2.5.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/me.ramswaroop.jbot/jbot -->
		<dependency>
			<groupId>me.ramswaroop.jbot</groupId>
			<artifactId>jbot</artifactId>
			<version>4.1.0</version>
		</dependency>

		<!-- http://opencsv.sourceforge.net/ -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.7</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/net.codebox/javabean-tester -->
		<dependency>
			<groupId>net.codebox</groupId>
			<artifactId>javabean-tester</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!-- https://projectlombok.org/setup/maven -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.16</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>2.2.5.RELEASE</version>
		  </dependency>

		<!-- https://www.baeldung.com/swagger-2-documentation-for-spring-rest-api -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>3.0.0</version>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<mkdir dir="${project.basedir}/javascript/build" />
								<copy todir="${project.build.directory}/classes/public">
									<fileset dir="${project.basedir}/javascript/build" />
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
			</plugin>


			<!-- Fix the error
		Exit code: 1 - javadoc: error - The code being documented uses modules
		but the packages defined in http://docs.oracle.com/javase/8/docs/api/
		are in the unnamed module. -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<source>11</source>
				</configuration>
				<version>3.1.0</version>
			</plugin>


			<!-- Make jar file executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.2</version>
				<configuration>
					<archive>
						<manifest>
							<!-- full package name of class with the main you want to run -->
							<mainClass>edu.ucsb.mapache.DemoApplication</mainClass>

						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Test case coverage report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<configuration>
					<excludes>
						<!-- Exclude class from test coverage -->
						<exclude>**/edu/ucsb/mapache/config/*</exclude>
						<exclude>**/edu/ucsb/mapache/DemoApplication.*</exclude>
						<exclude>**/edu/ucsb/mapache/services/CSVToObjectService.class</exclude>
						<exclude>**/edu/ucsb/mapache/services/CSVToObjectServiceImpl.class</exclude>
						<!-- Exclude full package from test coverage -->
						<!-- <exclude>**/*com/khan/vaquar/config/**</exclude> -->
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.8.2</version>
			</plugin>
		</plugins>
	</build>

	<!-- (28) <profiles/> -->
	<profiles>
		<profile>
			<id>localhost</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/config/localhost</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<configuration>
									<target>
										<copy todir="${project.build.directory}/classes">
											<file file="${project.basedir}/secrets-localhost.properties" />
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<properties>
				<environment-properties />
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<property>
					<name>env.TEST_PROPERTIES</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<properties>
				<environment-properties>${env.TEST_PROPERTIES}</environment-properties>
			</properties>
		</profile>
		<profile>
			<id>heroku</id>
			<activation>
				<property>
					<name>env.SPRING_PROPERTIES</name>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/config/heroku</directory>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<workingDirectory>javascript</workingDirectory>
							<installDirectory>${project.build.directory}</installDirectory>
						</configuration>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v12.12.0</nodeVersion>
									<npmVersion>6.14.3</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>ci</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm run build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
				</dependency>

				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-jdbc</artifactId>
				</dependency>
			</dependencies>
			<properties>
				<environment-properties>${env.SPRING_PROPERTIES}</environment-properties>
			</properties>
		</profile>
	</profiles>

</project>
